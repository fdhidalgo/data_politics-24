{
  "hash": "26f270b97df4099c639e78045a6700cc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Electoral Malfeasance\"\nsubtitle: \"Lecture 9\"\ndate: last-modified\nauthor: \n  - name: F. Daniel Hidalgo\n    email: dhidalgo@mit.edu\n    affiliations: MIT\nformat: \n  clean-revealjs:\n    incremental: true\nengine: knitr\nwebr:\n  packages: ['tidyverse'] # Install R packages on document open\n  show-startup-message: false\nfilters: \n  - timer\n  - webr\nbibliography: ../data_politics_2024.bib\neditor:\n  render-on-save: true\n---\n\n::: {.cell}\n\n:::\n\n\n# Electoral Malfeasance\n\n## 1948 Texan Democratic Primary\n\n:::: columns\n\n::: {.column width=\"50%\"}\n![](images/lbj.jpeg)\n:::\n\n::: {.column width=\"50%\" }\n\n- Lyndon B. Johnson (LBJ) vs. Coke Stevenson\n\n- On election day, Stevenson was ahead\n\n- Six days later, LBJ was ahead\n\n- LBJ won by 87 votes\n\n- Last 202 votes counted (*Box 13*) in Precinct 13 of Jim Wells County:\n  - 200 votes for LBJ\n  - 2 votes for Stevenson\n  \n- Voter Register: last 200 voters in Alphabetical Order \n:::\n\n::::\n\n## Box 13\n\n![](images/box13.jpg)\n\n\n## George Parr\n\n:::: columns\n\n::: {.column width=\"50%\"}\n![](images/parr.jpg)\n\n- Boss of the Parr Machine (*El Patrón*)\n- Ordered addition of 200 votes\n\n:::\n\n::: {.column width=\"50%\" .fragment }\n\n\nElection judge:\n\n\n>  We had the law to ourselves there. It was a lawless son-of-a-bitch. We had iron control. If a man was opposed to us, we’d put him out of business. Parr was the godfather. He had life or death control... We could tell any election judge: ‘Give us 80 per cent of the vote, the other guy 20 per cent.’ We had it made in every election \n\n:::\n\n::::\n\n## Clientelism\n\n\n```{mermaid}\n\ngraph TD\n  Patron --> Broker1[Broker]\n  Patron -->  Broker2[Broker]\n  Broker1 -->  Client1[Client]\n  Broker1 -->  Client2[Client]\n  Broker1 --> Client4[Client]\n  Broker2 -->  Client3[Client]\n  Broker2 -->  Client5[Client]\n\n```\n\n\n## Clientelism vs Redistribution\n\n![](images/hicken.png)\n\n## List Experiment in Colombia\n\n> I will read a list of five (5) things people have in mind when deciding who to vote for. I want you to tell me how many of these five things you have taken into account when voting for a candidate. Do not tell me WHICH, ONLY HOW MANY.” Then they are handed a card with the following options\n\n1. The information about the candidate on the radio or television,\n2. What you read about his or her government plan,\n3. **The benefits, gifts, or jobs the candidate offered you in exchange for your vote**\n4. The conversations you had with your friends about the candidate,\n5. The candidate’s party.\n\n## List Experiment Results\n\n| Response value | Control group Frequency | Control group Proportion (%) | Treatment group Frequency | Treatment group Proportion (%) |\n|----------------|-------------------------|------------------------------|---------------------------|--------------------------------|\n| 0              | 168                     | 6.6                          | 129                       | 4.5                            |\n| 1              | 1,185                   | 46.2                         | 1,221                     | 42.8                           |\n| 2              | 874                     | 34.1                         | 980                       | 34.3                           |\n| 3              | 212                     | 8.3                          | 343                       | 12.0                           |\n| 4              | 125                     | 4.9                          | 139                       | 4.9                            |\n| 5              |                       |                           | 44                        | 1.5                            |\n| **Average**    | **1.59**                |                              | **1.75**                  |                                |\n\n\n# Garbiras-Diáz and Montenegro (2022)\n\n## Irregularities\n\n![](images/gm_types.png)\n\n## Facebook Ads\n\n![](images/gm_fb.png){width=\"35%\"}\n\n. . .\n\n![](images/gm_timeline.png)\n\n## Experimental Design\n\n![](images/gm_design.png)\n\n## Factorial Design\n\n- Example of a **factorial** design\n\n- Two factors (treatments):\n  - Type of ad\n  - Letter or no letter\n  \n. . . \n\n| | Letter | No Letter |\n|---|---|---|\n| Information | Letter & Information | No Letter & Information |\n| Call-to-Action | Letter & Call-to-Action | No Letter & Call-to-Action |\n|Info & Call-to-Action | Letter & Info & Call-to-Action | No Letter & Info & Call-to-Action |\n\n## Stratification\n\n> To increase the balance on potential confounders across treatment conditions, we conducted a stratified randomization. We defined strata by the intersection of bins partitioning the sample in three ways: (i) by the fiftieth and eighty-fifth percentiles of the population over the age of 18, (ii) by the twentieth and eightieth percentiles of voter turnout in the first round of presidential elections in 2018, and (iii) by whether the municipalities filed reports through the MOE’s website around the congressional elections of 2018 above or below the median\n\n## Clustering\n\n- Level of randomization: municipalities\n- Dependent variables: \n  - Reports of irregularities (698 municipalities)\n  - Deviations from Benford's Law (698 municipalities)\n  - Candidates' vote share (**2,989** candidates)\n\n- What is the sample size? \n\n## Effect on Reports\n\n![](images/gm_effect_reports.png)\n\n## Effect on Irregularities\n![](images/gm_effect_media.png)\n\n\n## Effects on Candidates' Vote Share\n\n![](images/gm_effect_cand.png)\n\n\n## Cost Effectiveness\n\n- Total FB campaign: $10,870\n- Total cost of $15 per municipality\n- Reduced vote share of \"corrupt\" candidates by 2.5 percentage points\n- Average votes in each municipality is 13,352\n- Number of votes changed on average: (13,352 x 2.5% ) $\\approx$ 330 \n- Every $1  spent reduced about 21 votes for \"corrupt\" candidates\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}