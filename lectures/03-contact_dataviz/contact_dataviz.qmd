---
title: "Contact Theory and Data Visualization in `R`"
subtitle: "Lecture 3"
date: last-modified
author: 
  - name: F. Daniel Hidalgo
    email: dhidalgo@mit.edu
    affiliations: MIT
format: clean-revealjs
bibliography: ../data_politics_2024.bib
editor:
  render-on-save: true
---

# Contact Theory

## What works to reduce prejudice?

-   Inter-group animus or prejudice can be enduring and pervasive
    -   Ethnic
    -   Sexual identity
    -   Age
    -   Partisanship

. . .

-   How can we reduce prejudice?
    -   Media campaigns?
    -   Sensitivity trainings?
    -   Multicultural education?
    -   **Inter-group contact**

. . .

Many possible interventions, but most have poor evidence of effectiveness.

## What Types of Interventions are Studied?

::: columns
::: {.column width="50%"}
![](images/paluck_intervention_approaches.png)
:::

::: {.column .fragment width="50%"}
![](images/paluck_types.png)
:::
:::

## Inter-group Contact

::: columns
::: {.column width="50%"}
![](images/segregation-boston.png) Segregation in the Boston Area (Source: [NY Times](https://www.nytimes.com/interactive/2015/07/08/us/census-race-map.html))
:::

::: {.column .fragment width="50%"}
**Contact Theory** (Allport 1954):

-   **Positive contact** between members of different groups can reduce prejudice
-   **Conditions**:
    -   Equal status
    -   Common goals
    -   Intergroup cooperation
    -   Support of authorities, law, or custom
:::
:::

## Research Design

::: incremental
-   Most common study ask if attitudes or behavior (less common) is correlated with contact
    -   Some include demographic or other controls
    -   Consistent evidence for contact theory
:::

. . .

::: incremental
-   Second most common study uses "laboratory" experiments
    -   Controlled (i.e. scripted) settings and random assignment
    -   Intergroup contact is brief
    -   Measurement occurs shortly after contact
    -   *Example:* Pagtolun-an and Clair (1986) had a gay man answer questions about homosexuality for 90 minutes and then post-tested students
:::

## Field Experiments

::: columns
::: {.column width="50%"}
![](images/paluck_settings.png)
:::

::: {.column .fragment width="50%"}
-   **Field experiments**:
    -   Random assignment to treatment and control
    -   Real-world (less controlled) settings
    -   Short and Long-term follow-up
:::
:::

## Mousa (2020)

::: columns
::: {.column width="50%"}
![](images/science.png)
:::

::: {.column .fragment width="50%"}
::: incremental
-   Aftermath of genocide

-   Naturalistic study

-   Measuring behavior and attitudes

-   Random assignment to treatment and control

    -   Ensures potential outcomes are independent of treatment assignment
    -   Background characteristics (covariates) are **balanced** across treatment and control
:::
:::
:::

## Mousa (2020)

::: columns
::: {.column width="50%"}
-   459 players, 42 Christian soccer teams

-   On the field outcomes:

    -   Sign up for mixed team
    -   Vote for Muslim for Sportsmanship prize
    -   Train with Muslims

-   Off the field outcomes:

    -   Attend mixed event
    -   Patronize Muslim events
    -   Donate to neutral NGO
:::

::: {.column .fragment width="50%"}
-   Attitudinal indexes:
    -   National unity
    -   Muslim blame
    -   Muslim neighbor
:::
:::

# `ggplot2`

## ggplot2 $\in$ tidyverse

::: columns
::: {.column width="50%"}
![](images/ggplot2-part-of-tidyverse.png)
:::

::: {.column width="50%"}
-   **ggplot2** is tidyverse's data visualization package
-   Structure of the code for plots can be summarized as

``` r
ggplot(data = [dataset], 
       mapping = aes(x = [x-variable], 
                     y = [y-variable])) +
   geom_xxx() +
   other options
```
:::
:::


## Midwest data

```{r}
#| echo: true

library(ggplot2)
midwest

```

::: aside
This section draws heavily on [slides](https://gov50-f23.github.io/slides/03_data_viz_handout.pdf) prepared by Matt Blackwell. 
:::


## Building up a graph in pieces

Create ggplot object and direct it to the correct data:

```{r}
#| echo: true
p <- ggplot(data = midwest)
```

**Mapping**: tell ggplot what visual aesthetics correspond to which variables

```{r}
#| echo: true
p <- ggplot(data = midwest,
            mapping = aes(x = popdensity,
                          y = percbelowpoverty))
```

Other aesthetic mappings: color, shape, size, etc.

## Adding a geom layer

```{r}
#| echo: true
#| output-location: slide
#| fig.width: 6
ggplot(data = midwest, 
      mapping = aes(x = popdensity, y = percbelowpoverty)) + 
  geom_point()
```

## Trying a new geom

```{r}
#| echo: true
#| output-location: slide
#| fig.width: 6

ggplot(data = midwest, 
      mapping = aes(x = popdensity, y = percbelowpoverty)) + 
  geom_smooth()

```

## Layering geoms is additive

```{r}
#| echo: true
#| output-location: slide
#| fig.width: 6


ggplot(data = midwest, 
      mapping = aes(x = popdensity, y = percbelowpoverty)) + 
  geom_point() + 
  geom_smooth() +
  scale_x_log10()
```

## Geoms are functions

```{r}
#| echo: true
#| output-location: slide
#| fig.width: 6

ggplot(data = midwest, 
      mapping = aes(x = popdensity, y = percbelowpoverty)) + 
  geom_point() + 
  geom_smooth(method = "lm", se = FALSE) +
  scale_x_log10()
```

## Adding Informative Labels

```{r}
#| echo: true
#| output-location: slide
#| fig.width: 6

p2 <- ggplot(data = midwest, 
      mapping = aes(x = popdensity, y = percbelowpoverty)) + 
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  scale_x_log10() +
  labs(
    x = "Population Density",
    y = "Percent of County Below Poverty Line", 
    title = "Poverty and Population Density",
    subtitle = "Among US Midwestern Counties", 
    caption = "US Census, 2000"
  )
p2
```

## Mapping vs setting aesthetics

```{r}
#| echo: true
#| output-location: slide
#| fig.width: 6

ggplot(data = midwest, 
      mapping = aes(x = popdensity, y = percbelowpoverty,
                    color = "purple")) + 
  geom_point() + 
  geom_smooth(method = "lm", se = FALSE) +
  scale_x_log10()
```

## Mapping always refers to variables

If passed a value other than a variable name, ggplot will implicitly create a variable with that value (in this case "purple" that is constant)

```{r}
#| echo: true
#| eval: false

ggplot(data = midwest, 
      mapping = aes(x = popdensity, y = percbelowpoverty,
                    color = "purple")) + 
  geom_point() + 
  geom_smooth() +
  scale_x_log10()
```

. . .

Set the color outside the `mapping = aes()` format.

```{r}
#| echo: true
#| output-location: slide
#| fig.width: 6

ggplot(data = midwest, 
      mapping = aes(x = popdensity, y = percbelowpoverty)) + 
  geom_point(color = "purple") + 
  geom_smooth() +
  scale_x_log10()
```

## Mapping more aesthetics

```{r}
#| echo: true
#| output-location: slide
#| fig.width: 6

ggplot(data = midwest, 
      mapping = aes(x = popdensity, 
                    y = percbelowpoverty,
                    color = state, 
                    fill= state)) + 
  geom_point() + 
  geom_smooth() +
  scale_x_log10()
```

## Mappings can be done on a per geom basis

```{r}
#| echo: true
#| output-location: slide
#| fig.width: 6

ggplot(data = midwest, 
      mapping = aes(x = popdensity, 
                    y = percbelowpoverty)) + 
  geom_point(mapping = aes(color = state)) + 
  geom_smooth(color = "black") +
  scale_x_log10()
```

# Histograms and Boxplots

## Histograms

**Histograms** show where there are more or fewer observations of a numeric variable.

```{r}
#| echo: true
#| output-location: slide
#| fig.width: 6

ggplot(data = midwest,
       mapping = aes(x = percbelowpoverty)) +
  geom_histogram()
```

Split up range of variable into bins, count how many are in each bin.

y aesthetic calculated automatically.

## Creating small multiples with facets

**Small multiples**: a series of similar graphs with the same scale/axes to help with comparing different partitions of a dataset.

```{r}
#| echo: true
#| output-location: slide
#| fig.width: 6

ggplot(data = midwest,
       mapping = aes(x = percbelowpoverty)) +
  geom_histogram() +
  facet_wrap(~ state)
```

We’ll see more of the `~` variable syntax (called a formula).

## Density as alternative to histograms

A kernel density plot is a smoothed version of a histogram and slightly easier to overlay.

```{r}
#| echo: true
#| output-location: slide
#| fig.width: 6

ggplot(data = midwest,
       mapping = aes(x = percbelowpoverty,
                     fill = state, color = state)) +
  geom_density(alpha = .3)
```

## Boxplots

Boxplots are another way to compare distributions across discrete groups.

```{r}
#| echo: true
#| output-location: slide
#| fig.width: 6

ggplot(data = midwest,
       mapping = aes(x = state,
                     y = percbelowpoverty)) +
  geom_boxplot()
```

## Boxplots in `R`

::: incremental
-   “Box” represents middle 50% of the data.
    -   25% of the data is below the bottom of the box, 25% is above
    -   Height of the box is the interquartile range (IQR)
-   Horizontal line in the box is the median
    -   50% of the data is below the median, 50% is above
-   "Whiskers" represent either:
    -   1.5 $\times$ IQR or max/min of the data, whichever is smaller
    -   Points beyond the whiskers are considered outliers
:::
